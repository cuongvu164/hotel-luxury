{"ast":null,"code":"var _jsxFileName = \"E:\\\\web-hotel-api\\\\src\\\\components\\\\Booking\\\\Booking.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport uuid from 'uuid';\nimport { DatePicker, Space } from 'antd';\nimport { Form, Input, Button, Checkbox, Row, Col, Divider, Select, TextArea } from 'antd';\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport { Link, useHistory } from \"react-router-dom\";\nimport moment from 'moment';\nimport 'moment/locale/zh-cn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Booking = () => {\n  _s();\n\n  const [form] = Form.useForm();\n  const styles = {// width: '330px',\n  };\n  const styleLayout = {\n    display: 'grid',\n    gridTemplateColumns: '130px 300px'\n  };\n  var d = new Date();\n  var count = d.getMonth() + d.getSeconds() + d.getMilliseconds() + d.getFullYear();\n  let history = useHistory();\n  const [roomTypes, setRoomTypes] = useState([]);\n  const [bookings, setBookings] = useState([]);\n  const {\n    RangePicker\n  } = DatePicker;\n\n  const fetchRoomTypes = async () => {\n    await axios.get('http://localhost:5000/lp').then(response => {\n      setRoomTypes(response.data);\n    });\n  };\n\n  const onChange = e => {};\n\n  const dateFormat = 'DD/MM/YYYY';\n\n  const submitForm = async () => {\n    const payload = await form.getFieldsValue();\n    console.log('payload', payload.date[0]._d.getDate());\n  };\n\n  const onFinish = async values => {\n    const newData = { ...values\n    };\n    console.log('newdata', newData);\n    await axios.post(`http://localhost:5000/order/add?id=${count}&email=${values.email}&note=${values.note}&dayin=${values.date[0]._d.getMonth()}/${values.date[0]._d.getDay()}/${values.date[0]._d.getFullYear()}&dayout=${values.date[1]._d.getMonth()}/${values.date[1]._d.getUTCDay()}/${values.date[1]._d.getFullYear()}`).then(response => {\n      console.log('test post', response.data);\n\n      if (response.data) {\n        alert('Đã đặt được phòng');\n      } else {\n        alert('Chưa đặt được phòng');\n      }\n    });\n    history.push('/');\n  };\n\n  useEffect(() => {\n    fetchRoomTypes();\n  }, []);\n  const {\n    TextArea\n  } = Input;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"section\", {\n      class: \"site-section\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"col-md-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              class: \"mb-5\",\n              children: \"Reservation Form\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form, {\n              form: form,\n              name: \"control-hooks\",\n              onFinish: onFinish,\n              onSubmit: submitForm,\n              style: styles,\n              children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n                label: \"Ng\\xE0y nh\\u1EADn v\\xE0 tr\\u1EA3\",\n                name: \"date\",\n                style: styleLayout,\n                children: /*#__PURE__*/_jsxDEV(RangePicker, {\n                  format: dateFormat,\n                  defaultValue: moment('01-01-2021', 'DD-MM-YYYY'),\n                  style: styles\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"roomtype\",\n                label: \"Lo\\u1EA1i Ph\\xF2ng\",\n                rules: [{\n                  required: true,\n                  message: 'Hãy chọn 1 Loại'\n                }],\n                style: styleLayout,\n                children: /*#__PURE__*/_jsxDEV(Select, {\n                  style: styles,\n                  children: roomTypes.map((roomType, index) => {\n                    return /*#__PURE__*/_jsxDEV(Select.Option, {\n                      value: roomType.LoaiPhong,\n                      children: roomType.LoaiPhong\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 32\n                    }, this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"email\",\n                label: \"Email\",\n                rules: [{\n                  required: true,\n                  message: 'Please input your Email!'\n                } // { validator: validateEmail },\n                // { message: 'Phải nhập đúng định dạng Email' }\n                ],\n                style: styleLayout,\n                children: /*#__PURE__*/_jsxDEV(Input, {\n                  style: styles\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n                name: \"note\",\n                label: \"Ghi Ch\\xFA\",\n                style: styleLayout,\n                children: /*#__PURE__*/_jsxDEV(TextArea, {\n                  rows: 4\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                type: \"primary\",\n                onClick: submitForm,\n                htmlType: \"submit\",\n                children: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(Booking, \"Pfu2XNbwDM/xPiK6ILbh9fo6VKU=\", false, function () {\n  return [Form.useForm, useHistory];\n});\n\n_c = Booking;\nexport default Booking;\n\nvar _c;\n\n$RefreshReg$(_c, \"Booking\");","map":{"version":3,"sources":["E:/web-hotel-api/src/components/Booking/Booking.js"],"names":["React","useEffect","useState","axios","uuid","DatePicker","Space","Form","Input","Button","Checkbox","Row","Col","Divider","Select","TextArea","LoadingOutlined","PlusOutlined","Link","useHistory","moment","Booking","form","useForm","styles","styleLayout","display","gridTemplateColumns","d","Date","count","getMonth","getSeconds","getMilliseconds","getFullYear","history","roomTypes","setRoomTypes","bookings","setBookings","RangePicker","fetchRoomTypes","get","then","response","data","onChange","e","dateFormat","submitForm","payload","getFieldsValue","console","log","date","_d","getDate","onFinish","values","newData","post","email","note","getDay","getUTCDay","alert","push","required","message","map","roomType","index","LoaiPhong"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport uuid from 'uuid';\r\nimport { DatePicker, Space } from 'antd';\r\nimport { Form, Input, Button, Checkbox, Row, Col, Divider, Select, TextArea } from 'antd'\r\nimport { LoadingOutlined, PlusOutlined } from '@ant-design/icons'\r\nimport {\r\n  Link,\r\n  useHistory\r\n} from \"react-router-dom\";\r\nimport moment from 'moment';\r\nimport 'moment/locale/zh-cn';\r\nconst Booking = () => {\r\n  const [form] = Form.useForm()\r\n\r\n  const styles = {\r\n    // width: '330px',\r\n  }\r\n\r\n  const styleLayout = {\r\n    display: 'grid',\r\n    gridTemplateColumns: '130px 300px'\r\n  }\r\n\r\n  var d = new Date()\r\n  var count = d.getMonth() + d.getSeconds() + d.getMilliseconds() + d.getFullYear()\r\n  let history = useHistory()\r\n\r\n  const [roomTypes, setRoomTypes] = useState([])\r\n  const [bookings, setBookings] = useState([])\r\n  const { RangePicker } = DatePicker;\r\n\r\n  const fetchRoomTypes = async () => {\r\n    await axios.get('http://localhost:5000/lp')\r\n      .then(response => {\r\n        setRoomTypes(response.data)\r\n      })\r\n  }\r\n\r\n  const onChange = e => {\r\n\r\n  }\r\n  const dateFormat = 'DD/MM/YYYY'\r\n\r\n  const submitForm = async () => {\r\n    const payload = await form.getFieldsValue()\r\n    console.log('payload', payload.date[0]._d.getDate())\r\n  }\r\n\r\n  const onFinish = async (values) => {\r\n    const newData = { ...values }\r\n    console.log('newdata',newData)\r\n    await axios.post(`http://localhost:5000/order/add?id=${count}&email=${values.email}&note=${values.note}&dayin=${values.date[0]._d.getMonth()}/${values.date[0]._d.getDay()}/${values.date[0]._d.getFullYear()}&dayout=${values.date[1]._d.getMonth()}/${values.date[1]._d.getUTCDay()}/${values.date[1]._d.getFullYear()}`)\r\n      .then(response => {\r\n        console.log('test post', response.data)\r\n        if(response.data){\r\n          alert('Đã đặt được phòng')\r\n        } else {\r\n          alert('Chưa đặt được phòng')\r\n        }\r\n      })\r\n    history.push('/')\r\n  }\r\n\r\n  useEffect(() => {\r\n    fetchRoomTypes()\r\n  }, [])\r\n  const { TextArea } = Input;\r\n  return (\r\n    <>\r\n\r\n      <section class=\"site-section\">\r\n        <div class=\"container\">\r\n          <div class=\"row\">\r\n            <div class=\"col-md-6\">\r\n              <h2 class=\"mb-5\">Reservation Form</h2>\r\n              <Form form={form} name=\"control-hooks\" onFinish={onFinish} onSubmit={submitForm} style={styles}>\r\n\r\n                <Form.Item label=\"Ngày nhận và trả\" name =\"date\" style={styleLayout}>\r\n                  <RangePicker format={dateFormat} defaultValue={moment('01-01-2021','DD-MM-YYYY')} style={styles}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                  name=\"roomtype\"\r\n                  label=\"Loại Phòng\"\r\n                  rules={[\r\n                    { required: true, message: 'Hãy chọn 1 Loại' }\r\n                  ]}\r\n                  style={styleLayout}\r\n                >\r\n                  <Select style={styles}>\r\n                    {\r\n                      roomTypes.map((roomType, index) => {\r\n                        return <Select.Option \r\n                          value={roomType.LoaiPhong}>\r\n                          {roomType.LoaiPhong}\r\n                        </Select.Option>\r\n                      })\r\n                    }\r\n                  </Select>\r\n                </Form.Item>\r\n\r\n                <Form.Item \r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  rules={[\r\n                    { required: true, message: 'Please input your Email!' },\r\n                    // { validator: validateEmail },\r\n                    // { message: 'Phải nhập đúng định dạng Email' }\r\n                  ]}\r\n                  style={styleLayout}\r\n                >\r\n                  <Input style={styles}/>\r\n                </Form.Item>\r\n\r\n                <Form.Item \r\n                  name=\"note\"\r\n                  label=\"Ghi Chú\"\r\n                  style={styleLayout}\r\n                >\r\n                  <TextArea rows={4} />\r\n                </Form.Item>\r\n\r\n\r\n\r\n                <Button type=\"primary\" onClick={submitForm}  htmlType=\"submit\">Submit</Button>\r\n              </Form>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Booking;"]},"metadata":{},"sourceType":"module"}